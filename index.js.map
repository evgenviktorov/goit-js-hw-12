{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '50366269-4ee160a1f4b6fa516c5257acb';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport function getImagesByQuery(query) {\n  const searchParams = new URLSearchParams({\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  });\n\n  return axios\n    .get(`${BASE_URL}?${searchParams}`)\n    .then(response => {\n      return response.data.hits;\n    })\n    .catch(error => {\n      console.error('Error fetching images:', error.message);\n      throw error;\n    });\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst galleryContainer = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\nlet lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nexport function renderImages(images, query) {\n  clearGallery();\n  if (images.length === 0) {\n    iziToast.error({\n      title: '',\n      message: `Sorry, there are no images matching <br> your search query: \"${query}\". Please try again!`,\n      position: 'topRight',\n      backgroundColor: '#f44336',\n      messageColor: '#ffffff',\n      iconColor: '#fff',\n      close: false,\n      closeOnClick: true,\n      closeOnEscape: true,\n      timeout: 8000,\n      progressBarColor: '#ffffff',\n      layout: 2,\n    });\n    return;\n  }\n\n  const markup = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        comments,\n        downloads,\n        likes,\n        views,\n      }) =>\n        `<li class=\"gallery-link\"><a class=\"gallery-item\" href=\"${largeImageURL}\">\n  <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\"/></a>\n  <div class=\"info\">\n        <div class=\"info-list\">\n          <h4 class=\"info-title\">Likes</h4>\n          <p class=\"info-text\">${likes}</p>\n        </div>\n        <div class=\"info-list\">\n          <h4 class=\"info-title\">Views</h4>\n          <p class=\"info-text\">${views}</p>\n        </div>\n        <div class=\"info-list\">\n          <h4 class=\"info-title\">Comments</h4>\n          <p class=\"info-text\">${comments}</p>\n        </div>\n        <div class=\"info-list\">\n          <h4 class=\"info-title\">Downloads</h4>\n          <p class=\"info-text\">${downloads}</p>\n        </div>\n      </div></li> `\n    )\n    .join('');\n\n  galleryContainer.insertAdjacentHTML('beforeend', markup);\n\n  lightbox.refresh();\n}\n\nexport function clearGallery() {\n  galleryContainer.innerHTML = '';\n}\n\nexport function showLoader() {\n  loader.classList.remove('hidden');\n}\n\nexport function hideLoader() {\n  loader.classList.add('hidden');\n}\n","import { getImagesByQuery } from './js/pixabay-api.js';\nimport {\n  renderImages,\n  clearGallery,\n  showLoader,\n  hideLoader,\n} from './js/render-functions.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst searchInput = document.querySelector('input[name=\"search-text\"]');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const query = searchInput.value.trim();\n\n  if (query === '') {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Please enter a search query!',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  clearGallery();\n  showLoader();\n\n  getImagesByQuery(query)\n    .then(images => {\n      renderImages(images, query);\n    })\n    .catch(error => {\n      iziToast.error({\n        title: 'Error',\n        message: `Something went wrong: ${error.message}`,\n        position: 'topRight',\n      });\n    })\n    .finally(() => {\n      hideLoader();\n    });\n});\n"],"names":["API_KEY","BASE_URL","getImagesByQuery","query","searchParams","axios","response","error","galleryContainer","loader","lightbox","SimpleLightbox","renderImages","images","clearGallery","iziToast","markup","webformatURL","largeImageURL","tags","comments","downloads","likes","views","showLoader","hideLoader","form","searchInput","event"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,SAASC,EAAiBC,EAAO,CACtC,MAAMC,EAAe,IAAI,gBAAgB,CACvC,IAAKJ,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAG,EAED,OAAOE,EACJ,IAAI,GAAGJ,CAAQ,IAAIG,CAAY,EAAE,EACjC,KAAKE,GACGA,EAAS,KAAK,IACtB,EACA,MAAMC,GAAS,CACd,cAAQ,MAAM,yBAA0BA,EAAM,OAAO,EAC/CA,CACZ,CAAK,CACL,CClBA,MAAMC,EAAmB,SAAS,cAAc,UAAU,EACpDC,EAAS,SAAS,cAAc,SAAS,EAE/C,IAAIC,EAAW,IAAIC,EAAe,aAAc,CAC9C,aAAc,MACd,aAAc,GAChB,CAAC,EAEM,SAASC,EAAaC,EAAQV,EAAO,CAE1C,GADAW,IACID,EAAO,SAAW,EAAG,CACvBE,EAAS,MAAM,CACb,MAAO,GACP,QAAS,gEAAgEZ,CAAK,uBAC9E,SAAU,WACV,gBAAiB,UACjB,aAAc,UACd,UAAW,OACX,MAAO,GACP,aAAc,GACd,cAAe,GACf,QAAS,IACT,iBAAkB,UAClB,OAAQ,CACd,CAAK,EACD,MACD,CAED,MAAMa,EAASH,EACZ,IACC,CAAC,CACC,aAAAI,EACA,cAAAC,EACA,KAAAC,EACA,SAAAC,EACA,UAAAC,EACA,MAAAC,EACA,MAAAC,CACD,IACC,0DAA0DL,CAAa;AAAA,oCAC3CD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA,iCAI7BG,CAAK;AAAA;AAAA;AAAA;AAAA,iCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,iCAILH,CAAQ;AAAA;AAAA;AAAA;AAAA,iCAIRC,CAAS;AAAA;AAAA,mBAGrC,EACA,KAAK,EAAE,EAEVb,EAAiB,mBAAmB,YAAaQ,CAAM,EAEvDN,EAAS,QAAO,CAClB,CAEO,SAASI,GAAe,CAC7BN,EAAiB,UAAY,EAC/B,CAEO,SAASgB,GAAa,CAC3Bf,EAAO,UAAU,OAAO,QAAQ,CAClC,CAEO,SAASgB,GAAa,CAC3BhB,EAAO,UAAU,IAAI,QAAQ,CAC/B,CCxEA,MAAMiB,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAc,SAAS,cAAc,2BAA2B,EAEtED,EAAK,iBAAiB,SAAUE,GAAS,CACvCA,EAAM,eAAc,EAEpB,MAAMzB,EAAQwB,EAAY,MAAM,KAAI,EAEpC,GAAIxB,IAAU,GAAI,CAChBY,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,+BACT,SAAU,UAChB,CAAK,EACD,MACD,CAEDD,IACAU,IAEAtB,EAAiBC,CAAK,EACnB,KAAKU,GAAU,CACdD,EAAaC,EAAQV,CAAK,CAChC,CAAK,EACA,MAAMI,GAAS,CACdQ,EAAS,MAAM,CACb,MAAO,QACP,QAAS,yBAAyBR,EAAM,OAAO,GAC/C,SAAU,UAClB,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbkB,GACN,CAAK,CACL,CAAC"}